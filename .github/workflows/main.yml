# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # specify node-version
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Set up Node.js 
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          
      # Install dependencies
      - name: Install dependencies on CI/CD server
        run: npm install
        
      # Run tests on React Application [TODO]
#       - name: Run the tests
#         run: npm test

      # Build React application
      - name: Build production code
        run: npm run build
        env:
          CI: false
          
      # Remove files in the target build directory on the web server
      - name: Remove old files in the target build directory on the web server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: rm -rf ${{ secrets.REMOTE_DIR }}
          
      # Deploy build files to target build directory on the web server
      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          rm: false
          source: "build/*"
          strip_components: 1
          target: ${{ secrets.REMOTE_DIR }}
          
      # Deploy server.py file to server
      - name: Deploy server.py to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          rm: false
          source: "server/server.py"
          target: ${{ secrets.REMOTE_SERVER_DIR }}
